import React, { useState } from 'react';
import { Item } from '../types/item';
import { addItem } from '../firebase';

const ItemForm: React.FC = () => {
    const [title, setTitle] = useState('');
    const [description, setDescription] = useState('');
    const [status, setStatus] = useState<'lost' | 'found'>('lost');
    const [imageUrl, setImageUrl] = useState('');

    const handleSubmit = async (e: React.FormEvent) => {
        e.preventDefault();
        const newItem: Item = {
            id: '', // This will be generated by Firebase
            title,
            description,
            status,
            imageUrl,
        };
        await addItem(newItem);
        // Reset form fields
        setTitle('');
        setDescription('');
        setStatus('lost');
        setImageUrl('');
    };

    return (
        <form onSubmit={handleSubmit} className="p-4 border rounded shadow-md">
            <h2 className="text-lg font-bold mb-4">Report an Item</h2>
            <div className="mb-4">
                <label className="block mb-2" htmlFor="title">Title</label>
                <input
                    type="text"
                    id="title"
                    value={title}
                    onChange={(e) => setTitle(e.target.value)}
                    required
                    className="border rounded w-full p-2"
                />
            </div>
            <div className="mb-4">
                <label className="block mb-2" htmlFor="description">Description</label>
                <textarea
                    id="description"
                    value={description}
                    onChange={(e) => setDescription(e.target.value)}
                    required
                    className="border rounded w-full p-2"
                />
            </div>
            <div className="mb-4">
                <label className="block mb-2">Status</label>
                <select
                    value={status}
                    onChange={(e) => setStatus(e.target.value as 'lost' | 'found')}
                    className="border rounded w-full p-2"
                >
                    <option value="lost">Lost</option>
                    <option value="found">Found</option>
                </select>
            </div>
            <div className="mb-4">
                <label className="block mb-2" htmlFor="imageUrl">Image URL</label>
                <input
                    type="text"
                    id="imageUrl"
                    value={imageUrl}
                    onChange={(e) => setImageUrl(e.target.value)}
                    className="border rounded w-full p-2"
                />
            </div>
            <button type="submit" className="bg-blue-500 text-white rounded p-2">Submit</button>
        </form>
    );
};

export default ItemForm;